generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

//
// ----------------------------
// üîπ Users & Branch
// ----------------------------
model User {
  id           Int     @id @default(autoincrement())
  name         String?
  email        String  @unique
  passwordHash String
  role         Role    @default(user)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üîπ Relation ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Branch (‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å)
  branchId Int?
  branch   Branch? @relation(fields: [branchId], references: [id])

  // üîπ Relation ‡πÑ‡∏õ‡∏ó‡∏µ‡πà ConsignmentShop (‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢)
  consignmentShopId Int?
  consignmentShop   ConsignmentShop? @relation(fields: [consignmentShopId], references: [id])

  orders Order[]
  sales  Sale[]
}

model Branch {
  id        Int        @id @default(autoincrement())
  name      String
  type      BranchType @default(BRANCH) // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° field ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  location  String?
  taxId     String? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  users             User[]
  stocks            Stock[]
  orders            Order[]
  purchases         Purchase[]
  products          BranchProduct[]
  invoices          Invoice[]
  transfersFrom     Transfer[]         @relation("FromBranch")
  transfersTo       Transfer[]         @relation("ToBranch")
  invoiceTemplates  InvoiceTemplate[]
  deliveryTemplates DeliveryTemplate[]
  consignedProducts ConsignedProduct[]
  sales             Sale[]             @relation("SaleBranch") // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠ relation
  saleItems         SaleItem[]
}

enum BranchType {
  HEAD // ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà
  BRANCH // ‡∏™‡∏≤‡∏Ç‡∏≤
}

//
// ----------------------------
// üîπ Supplier
// ----------------------------
model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  contact   String?
  phone     String?
  email     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases Purchase[]
}

//
// ----------------------------
// üîπ Product & Category
// ----------------------------
model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  categoryId  Int
  barcode     String? @unique // ‚úÖ barcode ‡∏Å‡∏•‡∏≤‡∏á

  category  Category @relation(fields: [categoryId], references: [id])
  stocks    Stock[] // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  branchProducts    BranchProduct[]
  orderItems        OrderItem[]
  purchaseItems     PurchaseItem[]
  transferItems     TransferItem[]
  consignedProducts ConsignedProduct[]
  saleItems         SaleItem[]
}

//
// ----------------------------
// üîπ Product per Branch
// ----------------------------
model BranchProduct {
  id        Int      @id @default(autoincrement())
  branchId  Int
  productId Int
  sku       String? // ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤
  name      String? // ‡∏ä‡∏∑‡πà‡∏≠ override ‡πÑ‡∏î‡πâ
  price     Float // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏Ç‡∏≤‡∏ô‡∏µ‡πâ
  stock     Int      @default(0) // ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏™‡∏≤‡∏Ç‡∏≤‡∏ô‡∏µ‡πâ
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üîó Relation
  branch        Branch         @relation(fields: [branchId], references: [id])
  product       Product        @relation(fields: [productId], references: [id])
  orderItems    OrderItem[]
  transferItems TransferItem[]
  stocks        Stock[]
}

//
// ----------------------------
// üîπ Stock
// ----------------------------
model Stock {
  id              Int       @id @default(autoincrement())
  branchProductId Int
  productId       Int
  quantity        Int       @default(0)
  StockLocation   StockLocation  @default(MAIN)
  updatedAt       DateTime  @updatedAt

  branchProduct BranchProduct @relation(fields: [branchProductId], references: [id]) // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
  branch        Branch        @relation(fields: [branchId], references: [id])
  branchId      Int
  Product       Product       @relation(fields: [productId], references: [id])

  @@unique([branchProductId, StockLocation])
}

enum StockLocation {
  MAIN
  BRANCH
  CONSIGN
}

//
// ----------------------------
// üîπ Purchase (‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
// ----------------------------
model Purchase {
  id         Int            @id @default(autoincrement())
  supplierId Int
  branchId   Int? // ‡∏ñ‡πâ‡∏≤ null = ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å
  status     PurchaseStatus @default(PENDING)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  supplier Supplier       @relation(fields: [supplierId], references: [id])
  branch   Branch?        @relation(fields: [branchId], references: [id])
  items    PurchaseItem[]
}

model PurchaseItem {
  id          Int   @id @default(autoincrement())
  purchaseId  Int
  productId   Int
  orderedQty  Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏ö‡∏¥‡∏•)
  receivedQty Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏£‡∏¥‡∏á
  usableQty   Int // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
  defectQty   Int   @default(0) // defect (‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)
  unitCost    Float
  totalCost   Float
  StockLocation StockLocation @default(MAIN)

  purchase Purchase     @relation(fields: [purchaseId], references: [id])
  product  Product      @relation(fields: [productId], references: [id])
  defects  DefectItem[] // relation defect
}

enum PurchaseStatus {
  PENDING
  RECEIVED
  CANCELED
}

// ------------------------------
// DefectItem (‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î defect ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó)
// ------------------------------

model DefectItem {
  id             Int      @id @default(autoincrement())
  purchaseItemId Int
  reason         String? // ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏ defect
  quantity       Int
  createdAt      DateTime @default(now())

  purchaseItem PurchaseItem @relation(fields: [purchaseItemId], references: [id])
}

//
// ----------------------------
// üîπ Sale (Order)
// ----------------------------
model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  branchId  Int
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user    User        @relation(fields: [userId], references: [id])
  branch  Branch      @relation(fields: [branchId], references: [id])
  items   OrderItem[]
  invoice Invoice?
}

model OrderItem {
  id              Int   @id @default(autoincrement())
  orderId         Int
  productId       Int
  branchProductId Int?
  quantity        Int
  unitPrice       Float
  amount          Float

  order         Order          @relation(fields: [orderId], references: [id])
  product       Product        @relation(fields: [productId], references: [id])
  branchProduct BranchProduct? @relation(fields: [branchProductId], references: [id])
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELED
}

//
// ----------------------------
// üîπ Invoice (Flexible)
// ----------------------------
model Invoice {
  id        Int      @id @default(autoincrement())
  branchId  Int
  orderId   Int?     @unique
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  branch Branch        @relation(fields: [branchId], references: [id])
  order  Order?        @relation(fields: [orderId], references: [id])
  lines  InvoiceLine[]
}

model InvoiceLine {
  id        Int     @id @default(autoincrement())
  invoiceId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])

  description String?
  sku         String?
  productName String?
  category    String?
  quantity    Int?
  unitPrice   Float?
  amount      Float?

  createdAt DateTime @default(now())
}

model InvoiceTemplate {
  id        Int      @id @default(autoincrement())
  branchId  Int
  name      String
  config    Json
  createdAt DateTime @default(now())

  branch Branch @relation(fields: [branchId], references: [id])
}

//
// ----------------------------
// üîπ Transfer (‡πÇ‡∏≠‡∏ô/‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)
// ----------------------------
model Transfer {
  id           Int            @id @default(autoincrement())
  fromBranchId Int?
  toBranchId   Int?
  status       TransferStatus @default(PENDING)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  fromBranch  Branch?        @relation("FromBranch", fields: [fromBranchId], references: [id])
  toBranch    Branch?        @relation("ToBranch", fields: [toBranchId], references: [id])
  items       TransferItem[]
  deliveryDoc DeliveryDoc?
}

model TransferItem {
  id              Int    @id @default(autoincrement())
  transferId      Int
  productId       Int
  branchProductId Int?
  quantity        Int
  unitPrice       Float?
  amount          Float?

  transfer      Transfer       @relation(fields: [transferId], references: [id])
  product       Product        @relation(fields: [productId], references: [id])
  branchProduct BranchProduct? @relation(fields: [branchProductId], references: [id])
}

enum TransferStatus {
  PENDING
  SHIPPED
  RECEIVED
  CANCELED
}

//
// ----------------------------
// üîπ DeliveryDoc (‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á)
// ----------------------------
model DeliveryDoc {
  id         Int      @id @default(autoincrement())
  transferId Int      @unique
  templateId Int?
  createdAt  DateTime @default(now())
  status     DeliveryStatus @default(PENDING)

  transfer Transfer          @relation(fields: [transferId], references: [id])
  template DeliveryTemplate? @relation(fields: [templateId], references: [id])
  lines    DeliveryLine[]
}

model DeliveryLine {
  id         Int         @id @default(autoincrement())
  deliveryId Int
  delivery   DeliveryDoc @relation(fields: [deliveryId], references: [id])

  description String?
  sku         String?
  productName String?
  quantity    Int?
  unitPrice   Float?
  amount      Float?

  deliveryStockType   DeliveryStockType  @default(NORMAL) // NORMAL ‡∏´‡∏£‡∏∑‡∏≠ CONSIGNMENT
}

enum DeliveryStockType {
  NORMAL
  CONSIGNMENT
}

model DeliveryTemplate {
  id        Int      @id @default(autoincrement())
  branchId  Int
  name      String
  config    Json
  createdAt DateTime @default(now())

  docs   DeliveryDoc[]
  branch Branch        @relation(fields: [branchId], references: [id])
}

enum DeliveryStatus {
  PENDING
  SHIPPED
  RECEIVED
  CANCELED
}

//
// ----------------------------
// üîπ ENUMS
// ----------------------------
enum Role {
  admin
  seller
  staff
  user
}

// ----------------------------
// üîπ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢ (ConsignedProduct)
// ----------------------------

model ConsignmentShop {
  id        Int                 @id @default(autoincrement())
  name      String
  taxId     String? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ
  contact   String?
  phone     String?
  email     String?
  address   String?
  type      ConsignmentShopType @default(BRANCH) // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° field ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  users    User[] // üîπ user ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á/‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ
  products ConsignedProduct[]
  invoices ConsignmentInvoice[]
}

enum ConsignmentShopType {
  HEAD // ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà
  BRANCH // ‡∏™‡∏≤‡∏Ç‡∏≤
}

model ConsignedProduct {
  id        Int   @id @default(autoincrement())
  productId Int
  shopId    Int
  branchId  Int // üëâ ‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏Ç‡∏≤‡πÑ‡∏´‡∏ô
  price     Float // üëâ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢
  quantity  Int // üëâ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å

  shop      ConsignmentShop @relation(fields: [shopId], references: [id])
  product   Product         @relation(fields: [productId], references: [id])
  branch    Branch          @relation(fields: [branchId], references: [id])
  saleItems SaleItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ----------------------------
// üîπ ‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ (Sale / POS)
// ----------------------------
model Sale {
  id        Int      @id @default(autoincrement())
  userId    Int
  branchId  Int
  total     Float
  discount  Float    @default(0)
  vat       Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User       @relation(fields: [userId], references: [id])
  branch Branch     @relation("SaleBranch", fields: [branchId], references: [id]) // ‚úÖ ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Branch.sales
  items  SaleItem[]
  status SaleStatus @default(ACTIVE)
}

// ----------------------------
// üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢ (SaleItem)
// ----------------------------
model SaleItem {
  id        Int   @id @default(autoincrement())
  saleId    Int
  productId Int
  branchId  Int
  quantity  Int
  price     Float // üëâ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô‡∏Ç‡∏≤‡∏¢‡∏à‡∏£‡∏¥‡∏á (‡πÑ‡∏°‡πà‡∏û‡∏∂‡πà‡∏á BranchProduct/ConsignedProduct)

  sale                    Sale                     @relation(fields: [saleId], references: [id])
  product                 Product                  @relation(fields: [productId], references: [id])
  branch                  Branch                   @relation(fields: [branchId], references: [id])
  consignedProductId      Int? // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° field ‡∏ô‡∏µ‡πâ
  consignedProduct        ConsignedProduct?        @relation(fields: [consignedProductId], references: [id])
  consignmentInvoiceLines ConsignmentInvoiceLine[]
}

enum SaleStatus {
  ACTIVE
  CANCELED
}

//
// ----------------------------
// üîπ Consignment Invoice (‡πÉ‡∏ö‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≤‡∏¢)
// ----------------------------
model ConsignmentInvoice {
  id         Int                      @id @default(autoincrement())
  shopId     Int
  periodFrom DateTime
  periodTo   DateTime
  total      Float
  status     ConsignmentInvoiceStatus @default(PENDING)
  createdAt  DateTime                 @default(now())

  shop  ConsignmentShop          @relation(fields: [shopId], references: [id])
  lines ConsignmentInvoiceLine[]
}

model ConsignmentInvoiceLine {
  id          Int    @id @default(autoincrement())
  invoiceId   Int
  saleItemId  Int
  productName String
  quantity    Int
  price       Float
  amount      Float

  invoice  ConsignmentInvoice @relation(fields: [invoiceId], references: [id])
  saleItem SaleItem           @relation(fields: [saleItemId], references: [id])
}

enum ConsignmentInvoiceStatus {
  PENDING
  PAID
}
